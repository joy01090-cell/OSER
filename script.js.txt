// 상태 버튼들 초기화 및 토글 기능
const statusButtons = ['pain', 'td', 'swelling', 'bruise', 'extWound'];
const statusValues = {};
statusButtons.forEach(id => {
  statusValues[id] = '-';
  const btn = document.getElementById(id);
  if (btn) {
    btn.textContent = '-';
    btn.addEventListener('click', () => {
      statusValues[id] = statusValues[id] === '+' ? '-' : '+';
      btn.textContent = statusValues[id];
    });
  }
});
// 과거력 textarea 추가
document.getElementById('addPastBtn').addEventListener('click', () => {
  const newTextarea = document.createElement('textarea');
  newTextarea.placeholder = '예) 과거력 추가';
  newTextarea.rows = 2;
  newTextarea.style.width = '100%';
  newTextarea.style.marginTop = '8px';
  document.getElementById('pastHistoryList').appendChild(newTextarea);
});

// 보고서 생성
function makeReport() {
  const regNum = document.getElementById('regNum').value.trim();
  const sexAgeName = document.getElementById('sexAgeName').value.trim();

  const pastTextareas = document.querySelectorAll('#pastHistoryList textarea');
  let pastHistory = '';
  pastTextareas.forEach(ta => {
    const val = ta.value.trim();
    if(val) pastHistory += `# ${val}\n`;
  });

  const meds = document.getElementById('meds').value.trim();
  const chanrley = document.getElementById('charnley').value.trim();
  const traumaTime = document.getElementById('traumaTime').value.trim();
  const traumaMech = document.getElementById('traumaMechanism').value.trim();
  const chiefComp = document.getElementById('chiefComplaint').value.trim();
  const fractureSide = document.getElementById('fractureSide').value.trim();
  const fractureSite = document.getElementById('fractureSite').value.trim();
  const aoType = document.getElementById('aoType').value.trim();
  const distalCms = document.getElementById('distalCms').value.trim();
  const labAbn = document.getElementById('labAbnormal').value.trim();
  const patientStat = document.getElementById('patientStatus').value.trim();
  const profReport = document.getElementById('profReport').value.trim();

  const pain = statusValues['pain'] || '-';
  const td = statusValues['td'] || '-';
  const swelling = statusValues['swelling'] || '-';
  const bruise = statusValues['bruise'] || '-';
  const extWound = statusValues['extWound'] || '-';

  const report = `
응급실 환자 보고드립니다.

${sexAgeName}  ${regNum}  

${pastHistory ? pastHistory.trim() : '# 과거력 없음'}

Medi: ${meds}
평소 Charnley 점수 ${chanrley}

상기 병력 있는 분으로 ${traumaTime} ${traumaMech}으로 발생한 ${chiefComp}을 주소로 내원하였습니다.

- ${fractureSide} ${fractureSite}
- ${aoType}

Pain (${pain})/ Td (${td})
Swelling (${swelling})
Bruise (${bruise})
External wound (${extWound})
Distal CMS (${distalCms})


Lab (${labAbn}), n-s 및 V/S stable (${patientStat})합니다.

${profReport}
  `.trim();

  document.getElementById('reportArea').textContent = report;
}
